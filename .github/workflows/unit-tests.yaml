name: Build, Unit Tests and Linter
on:
  push:
    branches:
      - '**'
    paths:
      - '**.go'
      - 'Gopkg.lock'
      - 'Gopkg.toml'
      - '.golangci.yml'
      - 'Dockerfile.ci-test'
      - '.dockerignore'
      - '.github/workflows/*-tests.yaml'
  pull_request:
    branches:
      - '**'
jobs:
  test:
    name: Build, Unit Tests and Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push ci-test Docker image
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile.ci-test
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: tfgco/pusher:ci-test
      - name: Set up go vendor cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-build-${{ hashFiles('Gopkg.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('Gopkg.lock') }}
            ${{ runner.os }}-build-
      - name: Build
        run: docker run -v $PWD:/go/src/github.com/topfreegames/pusher tfgco/pusher:ci-test go build -v -o bin/pusher main.go
      - name: Test
        run: docker run -v $PWD:/go/src/github.com/topfreegames/pusher tfgco/pusher:ci-test ginkgo -v -r --randomizeAllSpecs --randomizeSuites --cover --focus="\[Unit\].*" --skipPackage=e2e .
      - name: Lint
        continue-on-error: true
        run: docker run -v $PWD:/go/src/github.com/topfreegames/pusher tfgco/pusher:ci-test golangci-lint run
