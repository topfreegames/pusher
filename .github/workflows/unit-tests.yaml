name: Build Multi-Arch, Unit Tests and Linter

on:
  push:
    branches:
      - '**'
    paths:
      - '**.go'
      - 'Gopkg.lock'
      - 'Gopkg.toml'
      - '.golangci.yml'
      - 'Dockerfile.ci-test'
      - '.dockerignore'
      - '.github/workflows/*-tests.yaml'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    name: Build, Unit Tests and Linter for ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: ubuntu-latest-arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ci-test Docker image for ${{ matrix.arch }}
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile.ci-test
          context: .
          platforms: linux/${{ matrix.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: tfgco/pusher:ci-test-${{ matrix.arch }}
          build-args: TARGETARCH=${{ matrix.arch }}

      - name: Set up go vendor cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-${{ matrix.arch }}-build-${{ hashFiles('Gopkg.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-build-${{ hashFiles('Gopkg.lock') }}
            ${{ runner.os }}-${{ matrix.arch }}-build-

      - name: Build
        run: docker run --platform linux/${{ matrix.arch }} -v $PWD:/go/src/github.com/topfreegames/pusher tfgco/pusher:ci-test-${{ matrix.arch }} /bin/sh -c "cd /go/src/github.com/topfreegames/pusher && GOOS=linux GOARCH=${{ matrix.arch }} go build -v -o bin/pusher main.go"

      - name: Test
        run: docker run --platform linux/${{ matrix.arch }} -v $PWD:/go/src/github.com/topfreegames/pusher tfgco/pusher:ci-test-${{ matrix.arch }} /bin/sh -c "cd /go/src/github.com/topfreegames/pusher && ginkgo -v -r --randomizeAllSpecs --randomizeSuites --cover --focus=\"\[Unit\].*\" --skipPackage=e2e ."

      - name: Lint
        continue-on-error: true
        run: docker run --platform linux/${{ matrix.arch }} -v $PWD:/go/src/github.com/topfreegames/pusher tfgco/pusher:ci-test-${{ matrix.arch }} /bin/sh -c "cd /go/src/github.com/topfreegames/pusher && golangci-lint run"