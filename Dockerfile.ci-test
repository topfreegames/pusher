#
# Copyright (c) 2016 TFG Co <backend@tfgco.com>
# Author: TFG Co <backend@tfgco.com>
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

FROM golang:1.10

ENV LIBRDKAFKA_VERSION 0.11.5
ENV CPLUS_INCLUDE_PATH /usr/local/include
ENV LIBRARY_PATH /usr/local/lib
ENV LD_LIBRARY_PATH /usr/local/lib
ENV KAFKA_DEV_VERSION 3.3.1
ENV GOLANGCI_LINT_VERSION 1.15.0
ENV GINKGO_VERSION 1.4.0

RUN apt-get install make git g++ bash python wget pkg-config
RUN apt update
RUN apt install -y postgresql
RUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
RUN wget --no-check-certificate -O /root/librdkafka-${LIBRDKAFKA_VERSION}.tar.gz https://github.com/edenhill/librdkafka/archive/v${LIBRDKAFKA_VERSION}.tar.gz && \
    tar -xzf /root/librdkafka-${LIBRDKAFKA_VERSION}.tar.gz -C /root && \
    cd /root/librdkafka-${LIBRDKAFKA_VERSION} && \
    ./configure && make && make install && make clean && ./configure --clean

# golangci-lint
RUN wget -O /go/bin/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_LINT_VERSION}/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz && \
    tar -xzf /go/bin/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz -C /go/bin && \
    mv /go/bin/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64/golangci-lint /go/bin/ && \
    rm -rf /go/bin/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64 && \
    rm /go/bin/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz

# ginkgo
RUN wget -O /go/bin/ginkgo-${GINKGO_VERSION}.tar.gz https://github.com/onsi/ginkgo/archive/refs/tags/v${GINKGO_VERSION}.tar.gz && \
    mkdir -p /go/src/github.com/onsi && \
    tar -xzf /go/bin/ginkgo-${GINKGO_VERSION}.tar.gz -C /go/src/github.com/onsi && \
    mv /go/src/github.com/onsi/ginkgo-${GINKGO_VERSION} /go/src/github.com/onsi/ginkgo && \
    go build -o /go/bin/ginkgo /go/src/github.com/onsi/ginkgo/ginkgo/*.go && \
    rm -rf /go/bin/ginkgo-${GINKGO_VERSION} && \
    rm /go/bin/ginkgo-${GINKGO_VERSION}.tar.gz && \
    rm -rf /go/src

RUN go get -u github.com/golang/dep/cmd/dep

WORKDIR /go/src/github.com/topfreegames/pusher

ADD . /go/src/github.com/topfreegames/pusher

# `dep ensure` must be run in the ci script using volumes to cache `vendor` dir
