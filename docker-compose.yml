services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_PORT_NUMBER: 2181
      ZOO_TICK_TIME: 2000
    ports:
      - "2288:2181"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 5s
      timeout: 5s
      retries: 10

  kafka:
    image: bitnami/kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9941
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9941
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_NUM_PARTITIONS: 3
      ALLOW_PLAINTEXT_LISTENER: "yes"
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9941:9941"
    healthcheck:
      test: kafka-topics.sh --bootstrap-server localhost:9092 --list
      interval: 5s
      timeout: 20s
      retries: 10

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "8585:5432"
    restart: unless-stopped
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 5s
      retries: 10

  statsd:
    image: statsd/statsd
    ports:
      - "80:80"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "40001:8125/udp"
      - "40002:8126"
    restart: unless-stopped
    healthcheck:
      test: |
        IFS= read ret << EOF
        $$(echo health | nc localhost 8126)
        EOF
        if [ "$$ret" != "health: up" ]
        then
          exit 0
        fi
        exit 1
      interval: 5s
      timeout: 5s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9000:8080
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  redis:
    image: redis:6.0.9-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3