services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2288:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
    restart: unless-stopped
    healthcheck:
      test: |
        IFS= read ret << EOF
        $$(echo ruok | nc localhost 2181)
        EOF
        if [ "$$ret" = "imok" ]
        then
          exit 0
        fi
        exit 1
      interval: 5s
      timeout: 5s
      retries: 10

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9941:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9941
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 5
    restart: unless-stopped
    healthcheck:
      test: kafka-topics --list --bootstrap-server kafka:9092
      interval: 25s
      timeout: 20s
      retries: 15

  postgres:
    image: postgres:12
    container_name: pusher_postgres_1
    ports:
      - "8585:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_HOST_AUTH_METHOD: "trust"
    restart: unless-stopped
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 5s
      retries: 10

  statsd:
    image: hopsoft/graphite-statsd
    ports:
      - "80:80"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "40001:8125/udp"
      - "40002:8126"
    restart: unless-stopped
    healthcheck:
      test: |
        apt update
        apt install -y netcat
        IFS= read ret << EOF
        $$(echo health | nc -w 1 localhost 8126)
        EOF
        if [ "$$ret" = "health: up" ]
        then
          exit 0
        fi
        exit 1
      interval: 20s
      timeout: 20s
      retries: 10
